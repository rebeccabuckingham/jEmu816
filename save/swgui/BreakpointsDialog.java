/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package jEmu816.swgui;

import javax.swing.*;
import javax.swing.table.TableCellRenderer;
import java.util.ArrayList;

/**
 * @author rebecca
 */
public class BreakpointsDialog extends javax.swing.JDialog {

	/**
	 * Creates new form BreakpointsPanel
	 */
	public BreakpointsDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
	}

	private GuiController getGuiController() {
		if (getParent() instanceof MainView) {
			return ((MainView) getParent()).guiController;
		}
		return null;
	}

	private ArrayListTableModel createTableModel() {
		if (getGuiController() != null) {
			ArrayList<Object[]> data = getGuiController().getBreakpointsList();
			return new ArrayListTableModel(
				new String[] { "Enabled", "Address" }, data);
		} else {
			return new ArrayListTableModel(new String[] { "Enabled", "Address" });
		}
	}

	static class CheckboxRenderer extends JCheckBox implements TableCellRenderer {
		public CheckboxRenderer() {
			setHorizontalAlignment(SwingConstants.CENTER);
		}

		@Override
		public java.awt.Component getTableCellRendererComponent(JTable table, Object value,
			boolean isSelected, boolean hasFocus,
			int row, int column) {
			setSelected((Boolean) value);
			return this;
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method
	 * is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		breakpointsTable = new javax.swing.JTable();
		enableBreakpointsCB = new javax.swing.JCheckBox();
		okButton = new javax.swing.JButton();
		addButton = new javax.swing.JButton();
		deleteButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 300));

		breakpointsTable.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
		breakpointsTable.setModel(createTableModel());
		breakpointsTable.setBounds(new java.awt.Rectangle(0, 0, 200, 80));
		breakpointsTable.setShowGrid(true);
		breakpointsTable.getColumnModel().getColumn(0).setCellRenderer(new CheckboxRenderer());
		breakpointsTable.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(new JCheckBox()));
		jScrollPane1.setViewportView(breakpointsTable);

		enableBreakpointsCB.setText("Enable Breakpoints");

		okButton.setText("Ok");
		okButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				okButtonActionPerformed(evt);
			}
		});

		addButton.setText("Add");
		addButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addButtonActionPerformed(evt);
			}
		});

		deleteButton.setText("Delete");
		deleteButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				deleteButtonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
										.addContainerGap()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																.addGroup(layout.createSequentialGroup()
																						.addComponent(enableBreakpointsCB)
																						.addGap(0, 0, Short.MAX_VALUE))
																.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
																	.addGap(0, 0, Short.MAX_VALUE)
																	.addComponent(addButton)
																	.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																	.addComponent(deleteButton)
																	.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																	.addComponent(okButton)
																	.addGap(6, 6, 6))
																.addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING,
																							javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE))
										.addContainerGap())
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
										.addContainerGap()
										.addComponent(enableBreakpointsCB)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE,
																		 Short.MAX_VALUE)
										.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																.addComponent(okButton)
																.addComponent(addButton)
																.addComponent(deleteButton))
										.addContainerGap())
		);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
		// if guiController is set, update breakpoints list and enable sw.
		if (getGuiController() != null) {
			ArrayListTableModel model = (ArrayListTableModel) breakpointsTable.getModel();
			getGuiController().setBreakpointsList(model.getList());
			getGuiController().setBreakpointsEnabled(enableBreakpointsCB.isSelected());
		}
		this.dispose();
	}//GEN-LAST:event_okButtonActionPerformed

	private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
		((ArrayListTableModel) breakpointsTable.getModel()).addRow(
			new Object[] { false, "$00:0000" }
		);

	}//GEN-LAST:event_addButtonActionPerformed

	private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
		int row = breakpointsTable.getSelectedRow();
		if (row >= 0) {
			((ArrayListTableModel) breakpointsTable.getModel()).removeRow(row);
		}
	}//GEN-LAST:event_deleteButtonActionPerformed

	/**
	 * @param args
	 * 	the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(BreakpointsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(BreakpointsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(BreakpointsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(BreakpointsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				BreakpointsDialog dialog = new BreakpointsDialog(new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton addButton;
	public javax.swing.JTable breakpointsTable;
	private javax.swing.JButton deleteButton;
	public javax.swing.JCheckBox enableBreakpointsCB;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JButton okButton;
	// End of variables declaration//GEN-END:variables
}
