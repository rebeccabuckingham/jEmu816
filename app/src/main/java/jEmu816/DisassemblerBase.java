package jEmu816;

public class DisassemblerBase {
	public enum AM {
		ABSI, ABSL, ABSX, ABSY, ABXI,
		ACC , ALNG, ALNX, DILY, DPAG,
		DPGI, DPGX, DPGY, DPIL, DPIX,
		DPIY, IMMB, IMMM, IMMW, IMMX,
		IMPL, LREL, MODE, RELA, SREL,
		SRIY, ABIL
	}

	public static final String[] opcodeNames = {
		"brk" , "ora" , "cop" , "ora" , "tsb" , "ora" , "asl" , "ora" ,
		"php" , "ora" , "asla", "phd" , "tsb" , "ora" , "asl" , "ora" ,
		"bpl" , "ora" , "ora" , "ora" , "trb" , "ora" , "asl" , "ora" ,
		"clc" , "ora" , "inca", "tcs" , "trb" , "ora" , "asl" , "ora" ,
		"jsr" , "and" , "jsl" , "and" , "bit" , "and" , "rol" , "and" ,
		"plp" , "and" , "rola", "pld" , "bit" , "and" , "rol" , "and" ,
		"bmi" , "and" , "and" , "and" , "bit" , "and" , "rol" , "and" ,
		"sec" , "and" , "deca", "tsc" , "bit" , "and" , "rol" , "and" ,
		"rti" , "eor" , "wdm" , "eor" , "mvp" , "eor" , "lsr" , "eor" ,
		"pha" , "eor" , "lsra", "phk" , "jmp" , "eor" , "lsr" , "eor" ,
		"bvc" , "eor" , "eor" , "eor" , "mvn" , "eor" , "lsr" , "eor" ,
		"cli" , "eor" , "phy" , "tcd" , "jmp" , "eor" , "lsr" , "eor" ,
		"rts" , "adc" , "per" , "adc" , "stz" , "adc" , "ror" , "adc" ,
		"pla" , "adc" , "rora", "rtl" , "jmp" , "adc" , "ror" , "adc" ,
		"bvs" , "adc" , "adc" , "adc" , "stz" , "adc" , "ror" , "adc" ,
		"sei" , "adc" , "ply" , "tdc" , "jmp" , "adc" , "ror" , "adc" ,
		"bra" , "sta" , "brl" , "sta" , "sty" , "sta" , "stx" , "sta" ,
		"dey" , "biti", "txa" , "phb" , "sty" , "sta" , "stx" , "sta" ,
		"bcc" , "sta" , "sta" , "sta" , "sty" , "sta" , "stx" , "sta" ,
		"tya" , "sta" , "txs" , "txy" , "stz" , "sta" , "stz" , "sta" ,
		"ldy" , "lda" , "ldx" , "lda" , "ldy" , "lda" , "ldx" , "lda" ,
		"tay" , "lda" , "tax" , "plb" , "ldy" , "lda" , "ldx" , "lda" ,
		"bcs" , "lda" , "lda" , "lda" , "ldy" , "lda" , "ldx" , "lda" ,
		"clv" , "lda" , "tsx" , "tyx" , "ldy" , "lda" , "ldx" , "lda" ,
		"cpy" , "cmp" , "rep" , "cmp" , "cpy" , "cmp" , "dec" , "cmp" ,
		"iny" , "cmp" , "dex" , "wai" , "cpy" , "cmp" , "dec" , "cmp" ,
		"bne" , "cmp" , "cmp" , "cmp" , "pei" , "cmp" , "dec" , "cmp" ,
		"cld" , "cmp" , "phx" , "stp" , "jmp" , "cmp" , "dec" , "cmp" ,
		"cpx" , "sbc" , "sep" , "sbc" , "cpx" , "sbc" , "inc" , "sbc" ,
		"inx" , "sbc" , "nop" , "xba" , "cpx" , "sbc" , "inc" , "sbc" ,
		"beq" , "sbc" , "sbc" , "sbc" , "pea" , "sbc" , "inc" , "sbc" ,
		"sed" , "sbc" , "plx" , "xce" , "jsr" , "sbc" , "inc" , "sbc"  };

	public static final int[] bytes = {
		2, 2, 2, 2, 2, 2, 2, 2,
		1, 2, 1, 1, 3, 3, 3, 4,
		2, 2, 2, 2, 2, 2, 2, 2,
		1, 3, 1, 1, 3, 3, 3, 4,
		3, 2, 4, 2, 2, 2, 2, 2,
		1, 2, 1, 1, 3, 3, 3, 4,
		2, 2, 2, 2, 2, 2, 2, 2,
		1, 3, 1, 1, 3, 3, 3, 4,
		1, 2, 2, 2, 3, 2, 2, 2,
		1, 2, 1, 1, 3, 3, 3, 4,
		2, 2, 2, 2, 3, 2, 2, 2,
		1, 3, 1, 1, 4, 3, 3, 4,
		1, 2, 3, 2, 2, 2, 2, 2,
		1, 2, 1, 1, 3, 3, 3, 4,
		2, 2, 2, 2, 2, 2, 2, 2,
		1, 3, 1, 1, 3, 3, 3, 4,
		2, 2, 3, 2, 2, 2, 2, 2,
		1, 2, 1, 1, 3, 3, 3, 4,
		2, 2, 2, 2, 2, 2, 2, 2,
		1, 3, 1, 1, 3, 3, 3, 4,
		2, 2, 2, 2, 2, 2, 2, 2,
		1, 2, 1, 1, 3, 3, 3, 4,
		2, 2, 2, 2, 2, 2, 2, 2,
		1, 3, 1, 1, 3, 3, 3, 4,
		2, 2, 2, 2, 2, 2, 2, 2,
		1, 2, 1, 1, 3, 3, 3, 4,
		2, 2, 2, 2, 2, 2, 2, 2,
		1, 3, 1, 1, 3, 3, 3, 4,
		2, 2, 2, 2, 2, 2, 2, 2,
		1, 2, 1, 1, 3, 3, 3, 4,
		2, 2, 2, 2, 3, 2, 2, 2,
		1, 3, 1, 1, 3, 3, 3, 4 };

	public static final AM[] addressModes = {
		AM.IMMB, AM.DPIX, AM.IMMB, AM.SREL, AM.DPAG, AM.DPAG, AM.DPAG, AM.DPIL,
		AM.IMPL, AM.IMMM, AM.ACC , AM.IMPL, AM.ABSL, AM.ABSL, AM.ABSL, AM.ALNG,
		AM.RELA, AM.DPIY, AM.DPGI, AM.SRIY, AM.DPAG, AM.DPGX, AM.DPGX, AM.DILY,
		AM.IMPL, AM.ABSY, AM.ACC , AM.IMPL, AM.ABSL, AM.ABSX, AM.ABSX, AM.ALNX,
		AM.ABSL, AM.DPIX, AM.ALNG, AM.SREL, AM.DPAG, AM.DPAG, AM.DPAG, AM.DPIL,
		AM.IMPL, AM.IMMM, AM.ACC , AM.IMPL, AM.ABSL, AM.ABSL, AM.ABSL, AM.ALNG,
		AM.RELA, AM.DPIY, AM.DPGI, AM.SRIY, AM.DPGX, AM.DPGX, AM.DPGX, AM.DILY,
		AM.IMPL, AM.ABSY, AM.ACC , AM.IMPL, AM.ABSX, AM.ABSX, AM.ABSX, AM.ALNX,
		AM.IMPL, AM.DPIX, AM.IMMB, AM.SREL, AM.IMMW, AM.DPAG, AM.DPAG, AM.DPIL,
		AM.IMPL, AM.IMMM, AM.IMPL, AM.IMPL, AM.ABSL, AM.ABSL, AM.ABSL, AM.ALNG,
		AM.RELA, AM.DPIY, AM.DPGI, AM.SRIY, AM.IMMW, AM.DPGX, AM.DPGX, AM.DPIL,
		AM.IMPL, AM.ABSY, AM.IMPL, AM.IMPL, AM.ALNG, AM.ABSX, AM.ABSX, AM.ALNX,
		AM.IMPL, AM.DPIX, AM.LREL, AM.SREL, AM.DPAG, AM.DPAG, AM.DPAG, AM.DPIL,
		AM.IMPL, AM.IMMM, AM.IMPL, AM.IMPL, AM.ABSI, AM.ABSL, AM.ABSL, AM.ALNG,
		AM.RELA, AM.DPIY, AM.DPGI, AM.SRIY, AM.DPGX, AM.DPGX, AM.DPGX, AM.DILY,
		AM.IMPL, AM.ABSY, AM.IMPL, AM.IMPL, AM.ABXI, AM.ABSX, AM.ABSX, AM.ALNX,
		AM.RELA, AM.DPIX, AM.LREL, AM.SREL, AM.DPAG, AM.DPAG, AM.DPAG, AM.DPIL,
		AM.IMPL, AM.IMMM, AM.IMPL, AM.IMPL, AM.ABSL, AM.ABSL, AM.ABSL, AM.ALNG,
		AM.RELA, AM.DPIY, AM.DPGI, AM.SRIY, AM.DPGX, AM.DPGX, AM.DPGY, AM.DILY,
		AM.IMPL, AM.ABSY, AM.IMPL, AM.IMPL, AM.ABSL, AM.ABSX, AM.ABSX, AM.ALNX,
		AM.IMMX, AM.DPIX, AM.IMMX, AM.SREL, AM.DPAG, AM.DPAG, AM.DPAG, AM.DPIL,
		AM.IMPL, AM.IMMM, AM.IMPL, AM.IMPL, AM.ABSL, AM.ABSL, AM.ABSL, AM.ALNG,
		AM.RELA, AM.DPIY, AM.DPGI, AM.SRIY, AM.DPGX, AM.DPGX, AM.DPGY, AM.DILY,
		AM.IMPL, AM.ABSY, AM.IMPL, AM.IMPL, AM.ABSX, AM.ABSX, AM.ABSY, AM.ALNX,
		AM.IMMX, AM.DPIX, AM.IMMB, AM.SREL, AM.DPAG, AM.DPAG, AM.DPAG, AM.DPIL,
		AM.IMPL, AM.IMMM, AM.IMPL, AM.IMPL, AM.ABSL, AM.ABSL, AM.ABSL, AM.ALNG,
		AM.RELA, AM.DPIY, AM.DPGI, AM.SRIY, AM.DPAG, AM.DPGX, AM.DPGX, AM.DILY,
		AM.IMPL, AM.ABSY, AM.IMPL, AM.IMPL, AM.ABIL, AM.ABSX, AM.ABSX, AM.ALNX,
		AM.IMMX, AM.DPIX, AM.IMMB, AM.SREL, AM.DPAG, AM.DPAG, AM.DPAG, AM.DPIL,
		AM.IMPL, AM.IMMM, AM.IMPL, AM.IMPL, AM.ABSL, AM.ABSL, AM.ABSL, AM.ALNG,
		AM.RELA, AM.DPIY, AM.DPGI, AM.SRIY, AM.IMMW, AM.DPGX, AM.DPGX, AM.DILY,
		AM.IMPL, AM.ABSY, AM.IMPL, AM.IMPL, AM.ABXI, AM.ABSX, AM.ABSX, AM.ALNX
	};

}
