package jEmu816.vera;

import jEmu816.Util;


import static jEmu816.vera.VeraHelper.*;

public class VeraTest {
	short dominos_font[] = {
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126,129,
			165,129,129,189,153,129,129,126,0,0,0,0,0,0,126,255,219,255,255,195,
			231,255,255,126,0,0,0,0,0,0,0,0,108,254,254,254,254,124,56,16,
			0,0,0,0,0,0,0,0,16,56,124,254,124,56,16,0,0,0,0,0,
			0,0,0,24,60,60,231,231,231,24,24,60,0,0,0,0,0,0,0,24,
			60,126,255,255,126,24,24,60,0,0,0,0,0,0,0,0,0,0,24,60,
			60,24,0,0,0,0,0,0,255,255,255,255,255,255,231,195,195,231,255,255,
			255,255,0,0,0,0,0,0,0,60,102,66,66,102,60,0,0,0,0,0,
			255,255,255,255,255,195,153,189,189,153,195,255,255,255,0,0,0,0,30,14,
			26,50,120,204,204,204,204,120,0,0,0,0,0,0,60,102,102,102,102,60,
			24,126,24,24,0,0,0,0,0,0,63,51,63,48,48,48,48,112,240,224,
			0,0,0,0,0,0,127,99,127,99,99,99,99,103,231,230,192,0,0,0,
			0,0,0,24,24,219,60,231,60,219,24,24,0,0,0,0,0,128,192,224,
			240,248,254,248,240,224,192,128,0,0,0,0,0,2,6,14,30,62,254,62,
			30,14,6,2,0,0,0,0,0,0,24,60,126,24,24,24,126,60,24,0,
			0,0,0,0,0,0,40,40,40,40,40,40,40,0,40,40,0,0,0,0,
			0,0,126,146,146,146,146,114,18,18,18,18,0,0,0,0,0,56,68,64,
			48,72,68,68,36,24,4,68,56,0,0,0,0,0,0,0,0,0,0,0,
			254,254,254,254,0,0,0,0,0,0,24,60,126,24,24,24,126,60,24,126,
			0,0,0,0,0,0,24,60,126,24,24,24,24,24,24,24,0,0,0,0,
			0,0,24,24,24,24,24,24,24,126,60,24,0,0,0,0,0,0,0,0,
			0,24,12,254,12,24,0,0,0,0,0,0,0,0,0,0,0,48,96,254,
			96,48,0,0,0,0,0,0,0,0,0,0,0,0,192,192,192,254,0,0,
			0,0,0,0,0,0,0,0,0,40,108,254,108,40,0,0,0,0,0,0,
			0,0,0,0,16,56,56,124,124,254,254,0,0,0,0,0,0,0,0,0,
			254,254,124,124,56,56,16,0,0,0,0,0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,0,16,16,
			0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,0,0,0,0,0,
			0,0,36,36,36,126,36,36,126,36,36,36,0,0,0,0,16,16,124,146,
			144,144,124,18,18,146,124,16,16,0,0,0,0,0,100,148,104,8,16,16,
			32,44,82,76,0,0,0,0,0,0,24,36,36,24,48,74,68,68,68,58,
			0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,
			0,0,8,16,32,32,32,32,32,32,16,8,0,0,0,0,0,0,32,16,
			8,8,8,8,8,8,16,32,0,0,0,0,0,0,0,0,0,36,24,126,
			24,36,0,0,0,0,0,0,0,0,0,0,0,16,16,124,16,16,0,0,
			0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,32,0,0,0,
			0,0,0,0,0,0,0,126,0,0,0,0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,16,16,0,0,0,0,0,0,4,4,8,8,16,16,
			32,32,64,64,0,0,0,0,0,0,60,66,66,70,74,82,98,66,66,60,
			0,0,0,0,0,0,8,24,40,8,8,8,8,8,8,62,0,0,0,0,
			0,0,60,66,66,2,4,8,16,32,64,126,0,0,0,0,0,0,60,66,
			66,2,28,2,2,66,66,60,0,0,0,0,0,0,2,6,10,18,34,66,
			126,2,2,2,0,0,0,0,0,0,126,64,64,64,124,2,2,2,66,60,
			0,0,0,0,0,0,28,32,64,64,124,66,66,66,66,60,0,0,0,0,
			0,0,126,66,2,4,4,8,8,16,16,16,0,0,0,0,0,0,60,66,
			66,66,60,66,66,66,66,60,0,0,0,0,0,0,60,66,66,66,66,62,
			2,2,4,56,0,0,0,0,0,0,0,0,0,16,16,0,0,0,16,16,
			0,0,0,0,0,0,0,0,0,16,16,0,0,0,16,16,32,0,0,0,
			0,0,0,4,8,16,32,64,32,16,8,4,0,0,0,0,0,0,0,0,
			0,0,126,0,0,126,0,0,0,0,0,0,0,0,0,32,16,8,4,2,
			4,8,16,32,0,0,0,0,0,0,60,66,66,2,4,8,8,0,8,8,
			0,0,0,0,0,0,124,130,158,162,162,162,166,154,128,126,0,0,0,0,
			0,0,60,66,66,66,66,126,66,66,66,66,0,0,0,0,0,0,124,66,
			66,66,124,66,66,66,66,124,0,0,0,0,0,0,60,66,66,64,64,64,
			64,66,66,60,0,0,0,0,0,0,120,68,66,66,66,66,66,66,68,120,
			0,0,0,0,0,0,126,64,64,64,120,64,64,64,64,126,0,0,0,0,
			0,0,126,64,64,64,120,64,64,64,64,64,0,0,0,0,0,0,60,66,
			64,64,64,78,66,66,66,60,0,0,0,0,0,0,66,66,66,66,126,66,
			66,66,66,66,0,0,0,0,0,0,56,16,16,16,16,16,16,16,16,56,
			0,0,0,0,0,0,14,4,4,4,4,4,4,68,68,56,0,0,0,0,
			0,0,66,68,72,80,96,96,80,72,68,66,0,0,0,0,0,0,64,64,
			64,64,64,64,64,64,64,126,0,0,0,0,0,0,130,198,170,146,146,130,
			130,130,130,130,0,0,0,0,0,0,66,66,66,98,82,74,70,66,66,66,
			0,0,0,0,0,0,60,66,66,66,66,66,66,66,66,60,0,0,0,0,
			0,0,124,66,66,66,66,124,64,64,64,64,0,0,0,0,0,0,60,66,
			66,66,66,66,66,66,74,60,2,0,0,0,0,0,124,66,66,66,66,124,
			80,72,68,66,0,0,0,0,0,0,60,66,64,64,60,2,2,66,66,60,
			0,0,0,0,0,0,254,16,16,16,16,16,16,16,16,16,0,0,0,0,
			0,0,66,66,66,66,66,66,66,66,66,60,0,0,0,0,0,0,66,66,
			66,66,66,36,36,36,24,24,0,0,0,0,0,0,130,130,130,130,130,146,
			146,170,198,130,0,0,0,0,0,0,66,66,36,36,24,24,36,36,66,66,
			0,0,0,0,0,0,130,130,68,68,40,16,16,16,16,16,0,0,0,0,
			0,0,126,2,2,4,8,16,32,64,64,126,0,0,0,0,0,0,56,32,
			32,32,32,32,32,32,32,56,0,0,0,0,0,0,64,64,32,32,16,16,
			8,8,4,4,0,0,0,0,0,0,56,8,8,8,8,8,8,8,8,56,
			0,0,0,0,0,0,16,40,68,0,0,0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,0,0,126,0,0,0,0,0,16,8,0,
			0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,2,62,
			66,66,66,62,0,0,0,0,0,0,64,64,64,124,66,66,66,66,66,124,
			0,0,0,0,0,0,0,0,0,60,66,64,64,64,66,60,0,0,0,0,
			0,0,2,2,2,62,66,66,66,66,66,62,0,0,0,0,0,0,0,0,
			0,60,66,66,126,64,64,60,0,0,0,0,0,0,14,16,16,124,16,16,
			16,16,16,16,0,0,0,0,0,0,0,0,0,62,66,66,66,66,66,62,
			2,2,60,0,0,0,64,64,64,124,66,66,66,66,66,66,0,0,0,0,
			0,0,16,16,0,48,16,16,16,16,16,56,0,0,0,0,0,4,4,0,
			12,4,4,4,4,4,4,68,68,56,0,0,0,0,64,64,64,66,68,72,
			112,72,68,66,0,0,0,0,0,0,48,16,16,16,16,16,16,16,16,56,
			0,0,0,0,0,0,0,0,0,252,146,146,146,146,146,146,0,0,0,0,
			0,0,0,0,0,124,66,66,66,66,66,66,0,0,0,0,0,0,0,0,
			0,60,66,66,66,66,66,60,0,0,0,0,0,0,0,0,0,124,66,66,
			66,66,124,64,64,64,0,0,0,0,0,0,0,62,66,66,66,66,62,2,
			2,2,0,0,0,0,0,0,0,94,96,64,64,64,64,64,0,0,0,0,
			0,0,0,0,0,62,64,64,60,2,2,124,0,0,0,0,0,0,16,16,
			16,124,16,16,16,16,16,12,0,0,0,0,0,0,0,0,0,66,66,66,
			66,66,66,62,0,0,0,0,0,0,0,0,0,66,66,66,36,36,24,24,
			0,0,0,0,0,0,0,0,0,130,146,146,146,146,146,124,0,0,0,0,
			0,0,0,0,0,66,66,36,24,36,66,66,0,0,0,0,0,0,0,0,
			0,66,66,66,66,66,62,2,2,60,0,0,0,0,0,0,0,126,4,8,
			16,32,64,126,0,0,0,0,0,0,12,16,16,16,16,32,16,16,16,16,
			12,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,0,0,0,0,
			0,0,48,8,8,8,8,4,8,8,8,8,48,0,0,0,0,0,0,0,
			0,0,98,146,140,0,0,0,0,0,0,0,0,0,0,0,16,40,68,130,
			130,130,254,0,0,0,0,0,0,0,60,66,66,64,64,64,64,66,66,60,
			16,16,32,0,0,0,36,36,0,66,66,66,66,66,66,62,0,0,0,0,
			0,0,8,16,0,60,66,66,126,64,64,60,0,0,0,0,0,0,24,36,
			0,60,2,62,66,66,66,62,0,0,0,0,0,0,36,36,0,60,2,62,
			66,66,66,62,0,0,0,0,0,0,16,8,0,60,2,62,66,66,66,62,
			0,0,0,0,0,24,36,24,0,60,2,62,66,66,66,62,0,0,0,0,
			0,0,0,0,0,60,66,64,64,64,66,60,16,16,32,0,0,0,24,36,
			0,60,66,66,126,64,64,60,0,0,0,0,0,0,36,36,0,60,66,66,
			126,64,64,60,0,0,0,0,0,0,16,8,0,60,66,66,126,64,64,60,
			0,0,0,0,0,0,72,72,0,48,16,16,16,16,16,56,0,0,0,0,
			0,0,48,72,0,48,16,16,16,16,16,56,0,0,0,0,0,0,32,16,
			0,48,16,16,16,16,16,56,0,0,0,0,0,36,0,60,66,66,66,126,
			66,66,66,66,0,0,0,0,0,24,36,24,60,66,66,66,126,66,66,66,
			0,0,0,0,0,8,16,126,64,64,64,120,64,64,64,126,0,0,0,0,
			0,0,0,0,0,108,18,114,158,144,144,108,0,0,0,0,0,0,126,144,
			144,144,252,144,144,144,144,158,0,0,0,0,0,0,24,36,0,60,66,66,
			66,66,66,60,0,0,0,0,0,0,36,36,0,60,66,66,66,66,66,60,
			0,0,0,0,0,0,16,8,0,60,66,66,66,66,66,60,0,0,0,0,
			0,0,24,36,0,66,66,66,66,66,66,62,0,0,0,0,0,0,16,8,
			0,66,66,66,66,66,66,62,0,0,0,0,0,0,0,36,36,0,66,66,
			66,66,66,62,2,2,60,0,0,36,0,60,66,66,66,66,66,66,66,60,
			0,0,0,0,0,36,36,0,66,66,66,66,66,66,66,60,0,0,0,0,
			0,0,8,8,62,73,72,72,72,73,62,8,8,0,0,0,0,0,24,36,
			32,32,120,32,32,32,34,126,0,0,0,0,0,130,130,68,68,40,16,124,
			16,124,16,16,0,0,0,0,0,0,0,0,96,80,80,100,78,68,68,66,
			0,0,0,0,0,0,8,20,16,16,56,16,16,16,16,16,80,32,0,0,
			0,0,8,16,0,60,2,62,66,66,66,62,0,0,0,0,0,0,16,32,
			0,48,16,16,16,16,16,56,0,0,0,0,0,0,8,16,0,60,66,66,
			66,66,66,60,0,0,0,0,0,0,8,16,0,66,66,66,66,66,66,62,
			0,0,0,0,0,0,50,76,0,124,66,66,66,66,66,66,0,0,0,0,
			0,50,76,0,66,66,98,82,74,70,66,66,0,0,0,0,0,0,60,2,
			62,66,62,0,126,0,0,0,0,0,0,0,0,0,56,68,68,56,0,124,
			0,0,0,0,0,0,0,0,0,0,0,16,16,0,16,16,32,66,66,66,
			60,0,0,0,0,0,0,0,0,0,254,192,192,192,192,0,0,0,0,0,
			0,0,0,0,0,0,254,6,6,6,6,0,0,0,0,0,0,32,96,32,
			34,36,8,16,32,76,146,4,8,30,0,0,0,32,96,32,34,36,8,16,
			34,70,138,30,2,2,0,0,0,0,0,16,16,0,16,16,16,16,16,16,
			16,0,0,0,0,0,0,0,18,36,72,144,72,36,18,0,0,0,0,0,
			0,0,0,0,72,36,18,9,18,36,72,0,0,0,0,0,17,68,17,68,
			17,68,17,68,17,68,17,68,17,68,17,68,85,170,85,170,85,170,85,170,
			85,170,85,170,85,170,85,170,221,119,221,119,221,119,221,119,221,119,221,119,
			221,119,221,119,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
			16,16,16,16,16,16,16,16,240,16,16,16,16,16,16,16,16,16,16,16,
			16,16,240,16,240,16,16,16,16,16,16,16,20,20,20,20,20,20,20,20,
			244,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,252,20,20,20,
			20,20,20,20,0,0,0,0,0,0,240,16,240,16,16,16,16,16,16,16,
			20,20,20,20,20,20,244,4,244,20,20,20,20,20,20,20,20,20,20,20,
			20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,252,4,
			244,20,20,20,20,20,20,20,20,20,20,20,20,20,244,4,252,0,0,0,
			0,0,0,0,20,20,20,20,20,20,20,20,252,0,0,0,0,0,0,0,
			16,16,16,16,16,16,240,16,240,0,0,0,0,0,0,0,0,0,0,0,
			0,0,0,0,240,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
			31,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,255,0,0,0,
			0,0,0,0,0,0,0,0,0,0,0,0,255,16,16,16,16,16,16,16,
			16,16,16,16,16,16,16,16,31,16,16,16,16,16,16,16,0,0,0,0,
			0,0,0,0,255,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,
			255,16,16,16,16,16,16,16,16,16,16,16,16,16,31,16,31,16,16,16,
			16,16,16,16,20,20,20,20,20,20,20,20,23,20,20,20,20,20,20,20,
			20,20,20,20,20,20,23,16,31,0,0,0,0,0,0,0,0,0,0,0,
			0,0,31,16,23,20,20,20,20,20,20,20,20,20,20,20,20,20,247,0,
			255,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,247,20,20,20,
			20,20,20,20,20,20,20,20,20,20,23,16,23,20,20,20,20,20,20,20,
			0,0,0,0,0,0,255,0,255,0,0,0,0,0,0,0,20,20,20,20,
			20,20,247,0,247,20,20,20,20,20,20,20,16,16,16,16,16,16,255,0,
			255,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,255,0,0,0,
			0,0,0,0,0,0,0,0,0,0,255,0,255,16,16,16,16,16,16,16,
			0,0,0,0,0,0,0,0,255,20,20,20,20,20,20,20,20,20,20,20,
			20,20,20,20,31,0,0,0,0,0,0,0,16,16,16,16,16,16,31,16,
			31,0,0,0,0,0,0,0,0,0,0,0,0,0,31,16,31,16,16,16,
			16,16,16,16,0,0,0,0,0,0,0,0,31,20,20,20,20,20,20,20,
			20,20,20,20,20,20,20,20,255,20,20,20,20,20,20,20,8,8,8,8,
			8,8,255,8,255,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,
			240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,16,16,16,
			16,16,16,16,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
			0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,240,240,240,240,
			240,240,240,240,240,240,240,240,240,240,240,240,15,15,15,15,15,15,15,15,
			15,15,15,15,15,15,15,15,255,255,255,255,255,255,255,255,0,0,0,0,
			0,0,0,0,0,0,0,0,0,58,68,68,68,68,70,58,0,0,0,0,
			0,0,56,68,68,72,124,66,66,66,66,124,64,64,0,0,0,0,126,64,
			64,64,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,126,66,66,
			66,66,66,66,0,0,0,0,0,0,126,64,32,16,8,8,16,32,64,126,
			0,0,0,0,0,0,0,0,0,62,68,68,68,68,68,56,0,0,0,0,
			0,0,0,0,0,66,66,66,66,66,70,122,64,64,64,0,0,0,0,0,
			0,254,16,16,16,16,16,12,0,0,0,0,0,0,0,0,0,38,73,73,
			73,73,73,62,8,8,8,0,0,0,0,56,68,68,68,124,68,68,68,68,
			56,0,0,0,0,0,0,60,66,66,66,66,66,66,36,36,102,0,0,0,
			0,0,0,62,16,8,60,66,66,66,66,66,60,0,0,0,0,0,0,0,
			0,0,0,124,146,146,146,124,0,0,0,0,0,0,0,16,124,146,146,146,
			146,146,146,124,16,0,0,0,0,0,0,0,0,60,66,64,56,64,66,60,
			0,0,0,0,0,0,126,66,66,66,66,66,66,66,66,66,0,0,0,0,
			0,0,0,0,254,0,0,254,0,0,254,0,0,0,0,0,0,0,0,0,
			0,16,16,124,16,16,0,124,0,0,0,0,0,0,0,32,16,8,4,8,
			16,32,0,126,0,0,0,0,0,0,0,4,8,16,32,16,8,4,0,126,
			0,0,0,0,0,0,12,18,18,16,16,16,16,16,16,16,16,16,16,16,
			16,16,16,16,16,16,16,16,16,16,16,144,144,96,0,0,0,0,0,0,
			0,0,16,0,124,0,16,0,0,0,0,0,0,0,0,0,0,0,118,220,
			0,118,220,0,0,0,0,0,0,0,56,68,68,56,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,6,4,
			4,4,4,68,68,68,36,20,12,0,0,0,0,0,120,68,68,68,68,68,
			0,0,0,0,0,0,0,0,0,0,112,136,16,32,64,248,0,0,0,0,
			0,0,0,0,0,0,0,0,0,124,124,124,124,124,124,124,0,0,0,0,
			0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	};

	VeraDevice veraDevice;
	static final int TEXT_CONSOLE_TILES = 0x800;
	static final int TEXT_CONSOLE0_VRAM = 0x1800;

	public VeraTest() {
		veraDevice = new VeraDevice(0xd100);
	}

	public void testLoop() {
		System.out.println("entering loop...");

		long startTime = System.currentTimeMillis();

		while (System.currentTimeMillis() < (startTime + 20000)) {
			boolean newFrame = veraDevice.videoStep(10);

			if (newFrame) {
				boolean haveEvent = veraDevice.videoUpdate();
				if (haveEvent) {
					byte[] event = veraDevice.getSDLEvent();
					//Util.dumpByteArray(event);
					int type = Util.getIntFromByteArray(event, 0);
					if (type == 0x300 || type == 0x301) {
						String sType = type == 0x300 ? "key DOWN" : "key UP";

						// have a keydown
						// note that modifier keys will show up as their own thing, but
						// sym will be a big number if so.
						int scancode = Util.getIntFromByteArray(event, 16);
						int sym = Util.getIntFromByteArray(event, 20);
						int mod = Util.getShortFromByteArray(event, 24);

						System.out.printf(sType + " scancode:%04x, sym:%04x (%c), mod:%02x\n",
															scancode, sym, (char) sym, mod);
					}
				}
			}
		}
	}

	public void setupTest() {
		VSET(veraDevice, (TEXT_CONSOLE_TILES | AUTO_INC_1));
		for (short value : dominos_font) {
			veraDevice.videoWrite(REG_DATA_0, value);
		}

		veraDevice.videoWrite(REG_DC_HSCALE, (short) 0x40);
		veraDevice.videoWrite(REG_DC_VSCALE, (short) 0x40);
		veraDevice.videoWrite(REG_L0_CONFIG, (short) (VERA_L_BPP1 | VERA_L_64H | VERA_L_128W));
		veraDevice.videoWrite(REG_L0_MAPBASE, (short) VERA_MAPBASE(TEXT_CONSOLE0_VRAM));
		veraDevice.videoWrite(REG_L0_TILEBASE, (short) VERA_TILEBASE(TEXT_CONSOLE_TILES, VERA_TILESIZE8x16));
		veraDevice.videoWrite(REG_L0_HSCROLL_H, (short) 0);
		veraDevice.videoWrite(REG_L0_HSCROLL_L, (short) 0);
		veraDevice.videoWrite(REG_L0_VSCROLL_H, (short) 0);
		veraDevice.videoWrite(REG_L0_VSCROLL_L, (short) 0);

		// enable layer 0
		int tmp = veraDevice.videoRead(REG_DC_VIDEO);
		veraDevice.videoWrite(REG_DC_VIDEO, (short) (tmp | 0x11));

		// mapbase is bits 16:9 only, so
		// 0x1800

		// point to start of video ram
		VSET(veraDevice,TEXT_CONSOLE0_VRAM | AUTO_INC_1);
		for (int i = 0; i < (2 * 80 * 15); i++) {
			veraDevice.videoWrite(REG_DATA_0, (short) 0);
			veraDevice.videoWrite(REG_DATA_0, (short) 0x61);
		}

		String msg = "hello, world!!!";
		int x = 0;

		for (int y = 0; y < 15; y++) {
			x = 0;
			for (int i = 0; i < msg.length(); i++) {
				VSET(veraDevice, TEXT_CONSOLE0_VRAM + (x << 1) + (y << 8) | AUTO_INC_1);
				x++;

				veraDevice.videoWrite(REG_DATA_0, (short) msg.charAt(i));
				veraDevice.videoWrite(REG_DATA_0, (short) 0x61);
			}
		}
	}

	public void test() {
		setupTest();
		testLoop();
	}

	public static void main(String[] args) {
		VeraTest vt = new VeraTest();
		vt.test();
	}
}
